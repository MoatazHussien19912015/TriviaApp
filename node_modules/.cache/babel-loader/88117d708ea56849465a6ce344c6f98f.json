{"ast":null,"code":"import * as actions from '../types/questionTypes';\nimport axios from 'axios';\nimport { url } from '../../config';\nexport const getQuestions = (dispatch, getState) => {\n  dispatch({\n    type: actions.GET_QUESTIONS_REQUEST\n  }); // checking if the questions existed in the localstorage\n\n  if (localStorage.getItem('questions')) {\n    dispatch({\n      type: actions.GET_QUESTIONS_SUCCESS,\n      payload: JSON.parse(localStorage.getItem('questions'))\n    });\n  } else {\n    axios.get(`${url}?amount=10&difficulty=hard&type=boolean`).then(result => {\n      localStorage.setItem('questions', JSON.stringify(result.data.results));\n      dispatch({\n        type: actions.GET_QUESTIONS_SUCCESS,\n        payload: result.data.results\n      });\n    }).catch(err => {\n      console.log(err);\n      dispatch({\n        type: actions.GET_QUESTIONS_FAIL,\n        payload: err.response.data\n      });\n    });\n  }\n};","map":{"version":3,"names":["actions","axios","url","getQuestions","dispatch","getState","type","GET_QUESTIONS_REQUEST","localStorage","getItem","GET_QUESTIONS_SUCCESS","payload","JSON","parse","get","then","result","setItem","stringify","data","results","catch","err","console","log","GET_QUESTIONS_FAIL","response"],"sources":["/media/moataz/data/my-projects/react projects/trivia/src/store/actions/questionActions.js"],"sourcesContent":["import * as actions from '../types/questionTypes';\nimport axios from 'axios';\nimport {url} from '../../config';\n\n\n\n\n\nexport const getQuestions =  (dispatch, getState) => {\n    dispatch({type: actions.GET_QUESTIONS_REQUEST});\n    // checking if the questions existed in the localstorage\n    if(localStorage.getItem('questions')){\n        dispatch({type: actions.GET_QUESTIONS_SUCCESS, payload: JSON.parse(localStorage.getItem('questions'))});\n       \n    }\n    else {\n    axios.get(`${url}?amount=10&difficulty=hard&type=boolean`).\n    then(result => {\n        localStorage.setItem('questions', JSON.stringify(result.data.results));\n        dispatch({type: actions.GET_QUESTIONS_SUCCESS, payload: result.data.results});\n    })\n    .catch(err=> { console.log(err); dispatch({type: actions.GET_QUESTIONS_FAIL, payload: err.response.data})});\n    }\n};\n\n"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,wBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,cAAlB;AAMA,OAAO,MAAMC,YAAY,GAAI,CAACC,QAAD,EAAWC,QAAX,KAAwB;EACjDD,QAAQ,CAAC;IAACE,IAAI,EAAEN,OAAO,CAACO;EAAf,CAAD,CAAR,CADiD,CAEjD;;EACA,IAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAH,EAAqC;IACjCL,QAAQ,CAAC;MAACE,IAAI,EAAEN,OAAO,CAACU,qBAAf;MAAsCC,OAAO,EAAEC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX;IAA/C,CAAD,CAAR;EAEH,CAHD,MAIK;IACLR,KAAK,CAACa,GAAN,CAAW,GAAEZ,GAAI,yCAAjB,EACAa,IADA,CACKC,MAAM,IAAI;MACXR,YAAY,CAACS,OAAb,CAAqB,WAArB,EAAkCL,IAAI,CAACM,SAAL,CAAeF,MAAM,CAACG,IAAP,CAAYC,OAA3B,CAAlC;MACAhB,QAAQ,CAAC;QAACE,IAAI,EAAEN,OAAO,CAACU,qBAAf;QAAsCC,OAAO,EAAEK,MAAM,CAACG,IAAP,CAAYC;MAA3D,CAAD,CAAR;IACH,CAJD,EAKCC,KALD,CAKOC,GAAG,IAAG;MAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MAAkBlB,QAAQ,CAAC;QAACE,IAAI,EAAEN,OAAO,CAACyB,kBAAf;QAAmCd,OAAO,EAAEW,GAAG,CAACI,QAAJ,CAAaP;MAAzD,CAAD,CAAR;IAAyE,CAL1G;EAMC;AACJ,CAfM"},"metadata":{},"sourceType":"module"}