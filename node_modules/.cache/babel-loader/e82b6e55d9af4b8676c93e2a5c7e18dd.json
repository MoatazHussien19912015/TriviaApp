{"ast":null,"code":"var _jsxFileName = \"/media/moataz/data/my-projects/react projects/trivia/src/components/pages/QuizPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getQuestions } from './../../store/actions/questionActions';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuizPage = () => {\n  _s();\n\n  var _question$question;\n\n  const dispatch = useDispatch();\n  const questions = useSelector(state => state.questionsReducer.questions);\n  const [question, setQuestion] = useState({});\n  const [choice, setChoice] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [score, setScore] = useState(0);\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    dispatch(getQuestions());\n  }, []);\n  useEffect(() => {\n    console.log(questions);\n\n    if (questions) {\n      setQuestion(questions[0]);\n      setIndex(1);\n    }\n  }, [questions]);\n\n  const check_answer = user_answer => {\n    console.log(user_answer.toLowerCase() == question.correct_answer.toLowerCase());\n\n    if (user_answer.toLowerCase() == question.correct_answer.toLowerCase()) {\n      setScore(val => ++val);\n    }\n  };\n\n  const nextQuestion = evt => {\n    setLoading(true);\n    let q_index = questions.findIndex(item => item == question);\n    check_answer(evt.target.value);\n    setChoice(evt.target.value);\n    setTimeout(() => {\n      setChoice(null);\n      setQuestion(questions[++q_index]);\n      setIndex(x => ++x);\n      setLoading(false);\n    }, 1000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: index < 11 ? /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        textAlign: 'center',\n        paddingTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: question.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: '3px solid red',\n            width: '60vw',\n            height: '50vh',\n            margin: '0 auto'\n          },\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              height: '50vh'\n            },\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 121\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: question === null || question === void 0 ? void 0 : (_question$question = question.question) === null || _question$question === void 0 ? void 0 : _question$question.replace(/&quot;/g, '\"')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 158\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            inline: true,\n            name: \"group1\",\n            type: 'radio',\n            id: `true`,\n            label: `True`,\n            onClick: nextQuestion,\n            value: 'true',\n            checked: choice == 'true'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            inline: true,\n            name: \"group1\",\n            type: 'radio',\n            id: `false`,\n            label: `False`,\n            onClick: nextQuestion,\n            value: 'false',\n            checked: choice == 'false'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)]\n        }, `true`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(ResultPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(QuizPage, \"SNoD7gepAReVe2ycT56Ys3QPxDs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = QuizPage;\nexport default QuizPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","Card","Form","useDispatch","useSelector","getQuestions","Spinner","QuizPage","dispatch","questions","state","questionsReducer","question","setQuestion","choice","setChoice","loading","setLoading","score","setScore","index","setIndex","console","log","check_answer","user_answer","toLowerCase","correct_answer","val","nextQuestion","evt","q_index","findIndex","item","target","value","setTimeout","x","textAlign","paddingTop","category","border","width","height","margin","display","justifyContent","alignItems","replace"],"sources":["/media/moataz/data/my-projects/react projects/trivia/src/components/pages/QuizPage.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Card, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {getQuestions} from './../../store/actions/questionActions';\nimport Spinner from 'react-bootstrap/Spinner';\nconst QuizPage = () => {\n    const dispatch = useDispatch();\n    const questions = useSelector(state => state.questionsReducer.questions);\n    const [question, setQuestion] = useState({});\n    const [choice, setChoice] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [score, setScore] = useState(0);\n    const [index, setIndex] = useState(0);\n    useEffect(() => {\n       dispatch(getQuestions()); \n    }, []);\n\n    useEffect(() => { console.log(questions);\n        if(questions){\n            setQuestion(questions[0]);\n            setIndex(1);\n        }\n    }, [questions]);\n\n    const check_answer = (user_answer) => { console.log(user_answer.toLowerCase() == question.correct_answer.toLowerCase());\n        if(user_answer.toLowerCase() == question.correct_answer.toLowerCase()) {setScore(val=>++val);}\n    };\n\n    const nextQuestion = (evt) => {\n        setLoading(true);\n        let q_index = questions.findIndex(item=>item==question);\n        check_answer(evt.target.value);\n        setChoice(evt.target.value);\n        setTimeout(() => {\n            setChoice(null);\n        setQuestion(questions[++q_index]);\n        setIndex(x=>++x);\n        setLoading(false);\n        }, 1000);\n        \n    };\n    return (\n        <>{index<11?<Card style={{textAlign: 'center', paddingTop: '20px'}}>\n            <Card.Title>\n               {question.category}\n            </Card.Title>\n            <Card.Body>\n            <div style={{border: '3px solid red',width: '60vw', height: '50vh', margin: '0 auto'}}>\n                {loading?<div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '50vh'}}><Spinner animation=\"border\" /></div>:<h3>{question?.question?.replace(/&quot;/g, '\"')}</h3> }\n                </div>\n                <div key={`true`} className=\"mt-3\">\n          <Form.Check inline\n          name=\"group1\"\n            type={'radio'}\n            id={`true`}\n            label={`True`}\n            onClick={nextQuestion}\n            value={'true'}\n            checked={choice=='true'}\n          />\n           \n          <Form.Check  inline\n          name=\"group1\"\n            type={'radio'}\n            id={`false`}\n            label={`False`}\n            onClick={nextQuestion}\n            value={'false'}\n            checked={choice=='false'}\n          />\n            </div>\n            </Card.Body>\n            \n        </Card>:<ResultPage />}\n        </>\n    );\n};\n\nexport default QuizPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}