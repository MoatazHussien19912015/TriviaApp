{"ast":null,"code":"import * as actions from '../types/questionTypes';\nimport lodash from 'lodash'; //import { isEmpty } from '../../utils';\n\nfunction questionsReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    loading: false,\n    questions: localStorage.getItem('questions') ? JSON.parse(localStorage.getItem('questions')) : [],\n    answers: [],\n    error: null\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.GET_QUESTIONS_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case actions.GET_QUESTIONS_SUCCESS:\n      return { ...state,\n        loading: false,\n        questions: action.payload,\n        error: null\n      };\n\n    case actions.GET_QUESTIONS_FAIL:\n      return { ...state,\n        loading: false,\n        questions: [],\n        error: action.payload\n      };\n\n    case actions.ADD_ANSWER_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case actions.ADD_ANSWER_SUCCESS:\n      return { ...state,\n        loading: false,\n        answers: [...answers, action.payload],\n        error: null\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default questionsReducer;","map":{"version":3,"names":["actions","lodash","questionsReducer","state","loading","questions","localStorage","getItem","JSON","parse","answers","error","action","type","GET_QUESTIONS_REQUEST","GET_QUESTIONS_SUCCESS","payload","GET_QUESTIONS_FAIL","ADD_ANSWER_REQUEST","ADD_ANSWER_SUCCESS"],"sources":["/media/moataz/data/my-projects/react projects/trivia/src/store/reducers/questionsReducer.js"],"sourcesContent":["import * as actions  from '../types/questionTypes';\nimport lodash from 'lodash';\n    //import { isEmpty } from '../../utils';\n        \n        function questionsReducer ( state = {\n            loading: false,\n            questions: localStorage.getItem('questions')?JSON.parse(localStorage.getItem('questions')):[],\n            answers: [],\n          error: null\n          }, action) {\n            switch(action.type){\n                case actions.GET_QUESTIONS_REQUEST: return { ...state, loading: true};\n                case actions.GET_QUESTIONS_SUCCESS: return { ...state, loading: false, \n                    questions: action.payload, error: null};\n                case actions.GET_QUESTIONS_FAIL: return { ...state, loading: false, questions: [], error: action.payload };\n\n                case actions.ADD_ANSWER_REQUEST: return { ...state, loading: true};\n                case actions.ADD_ANSWER_SUCCESS: return { ...state, loading: false, \n                    answers: [...answers, action.payload], error: null};\n\n                \n    \n    \n                default: return state;\n            }\n          }\n    \n          export default questionsReducer;"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAA0B,wBAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACI;;AAEI,SAASC,gBAAT,GAKa;EAAA,IALeC,KAKf,uEALuB;IAChCC,OAAO,EAAE,KADuB;IAEhCC,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAkCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlC,GAAgF,EAF3D;IAGhCG,OAAO,EAAE,EAHuB;IAIlCC,KAAK,EAAE;EAJ2B,CAKvB;EAAA,IAARC,MAAQ;;EACT,QAAOA,MAAM,CAACC,IAAd;IACI,KAAKb,OAAO,CAACc,qBAAb;MAAoC,OAAO,EAAE,GAAGX,KAAL;QAAYC,OAAO,EAAE;MAArB,CAAP;;IACpC,KAAKJ,OAAO,CAACe,qBAAb;MAAoC,OAAO,EAAE,GAAGZ,KAAL;QAAYC,OAAO,EAAE,KAArB;QACvCC,SAAS,EAAEO,MAAM,CAACI,OADqB;QACZL,KAAK,EAAE;MADK,CAAP;;IAEpC,KAAKX,OAAO,CAACiB,kBAAb;MAAiC,OAAO,EAAE,GAAGd,KAAL;QAAYC,OAAO,EAAE,KAArB;QAA4BC,SAAS,EAAE,EAAvC;QAA2CM,KAAK,EAAEC,MAAM,CAACI;MAAzD,CAAP;;IAEjC,KAAKhB,OAAO,CAACkB,kBAAb;MAAiC,OAAO,EAAE,GAAGf,KAAL;QAAYC,OAAO,EAAE;MAArB,CAAP;;IACjC,KAAKJ,OAAO,CAACmB,kBAAb;MAAiC,OAAO,EAAE,GAAGhB,KAAL;QAAYC,OAAO,EAAE,KAArB;QACpCM,OAAO,EAAE,CAAC,GAAGA,OAAJ,EAAaE,MAAM,CAACI,OAApB,CAD2B;QACGL,KAAK,EAAE;MADV,CAAP;;IAMjC;MAAS,OAAOR,KAAP;EAbb;AAeD;;AAED,eAAeD,gBAAf"},"metadata":{},"sourceType":"module"}