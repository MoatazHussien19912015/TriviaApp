{"ast":null,"code":"import * as actions from '../types/questionTypes';\nimport axios from 'axios';\nimport { url } from '../../config';\nexport const getQuestions = () => (dispatch, getState) => {\n  dispatch({\n    type: actions.GET_QUESTIONS_REQUEST\n  }); // checking if the questions existed in the localstorage\n\n  if (localStorage.getItem('questions')) {\n    dispatch({\n      type: actions.GET_QUESTIONS_SUCCESS,\n      payload: JSON.parse(localStorage.getItem('questions'))\n    });\n    console.log('heeeey');\n  } else {\n    axios.get(`${url}?amount=10&difficulty=hard&type=boolean`).then(result => {\n      // removing hmtl unicoded characters\n      let questions = result.data.results.map(question => {\n        const encodedResults = question.question;\n        const textarea = document.createElement('textarea');\n        textarea.innerHTML = encodedResults; //  const decodedResults = textarea.value;\n\n        return Object.assign({}, ...question, {\n          question: textarea.value\n        });\n      });\n      localStorage.setItem('questions', JSON.stringify(questions));\n      dispatch({\n        type: actions.GET_QUESTIONS_SUCCESS,\n        payload: questions\n      });\n    }).catch(err => {\n      console.log(err);\n      dispatch({\n        type: actions.GET_QUESTIONS_FAIL,\n        payload: err.response.data\n      });\n    });\n  }\n};\nexport const addAnswer = answer => (dispatch, getState) => {\n  dispatch({\n    type: actions.ADD_ANSWER_REQUEST\n  });\n  dispatch({\n    type: actions.ADD_ANSWER_SUCCESS,\n    payload: answer\n  });\n};\nexport const addScore = score => (dispatch, getState) => {\n  dispatch({\n    type: actions.ADD_SCORE_REQUEST\n  });\n  dispatch({\n    type: actions.ADD_SCORE_SUCCESS,\n    payload: score\n  });\n};\nexport const init = () => (dispatch, getState) => {\n  dispatch({\n    type: actions.INIT_REQUEST\n  });\n  localStorage.removeItem('questions');\n  dispatch({\n    type: actions.INIT_SUCCESS\n  });\n};","map":{"version":3,"names":["actions","axios","url","getQuestions","dispatch","getState","type","GET_QUESTIONS_REQUEST","localStorage","getItem","GET_QUESTIONS_SUCCESS","payload","JSON","parse","console","log","get","then","result","questions","data","results","map","question","encodedResults","textarea","document","createElement","innerHTML","Object","assign","value","setItem","stringify","catch","err","GET_QUESTIONS_FAIL","response","addAnswer","answer","ADD_ANSWER_REQUEST","ADD_ANSWER_SUCCESS","addScore","score","ADD_SCORE_REQUEST","ADD_SCORE_SUCCESS","init","INIT_REQUEST","removeItem","INIT_SUCCESS"],"sources":["/media/moataz/data/my-projects/react projects/trivia/src/store/actions/questionActions.js"],"sourcesContent":["import * as actions from '../types/questionTypes';\nimport axios from 'axios';\nimport {url} from '../../config';\n\n\n\n\n\nexport const getQuestions = () => (dispatch, getState) => {\n    dispatch({type: actions.GET_QUESTIONS_REQUEST});\n    // checking if the questions existed in the localstorage\n    if(localStorage.getItem('questions')){\n        dispatch({type: actions.GET_QUESTIONS_SUCCESS, payload: JSON.parse(localStorage.getItem('questions'))});\n       console.log('heeeey');\n    }\n    else {\n    axios.get(`${url}?amount=10&difficulty=hard&type=boolean`).\n    then(result => {\n        // removing hmtl unicoded characters\n        let questions = result.data.results.map(question => {\n            const encodedResults = question.question;\n            const textarea = document.createElement('textarea');\n            textarea.innerHTML = encodedResults;\n          //  const decodedResults = textarea.value;\n            return Object.assign({}, ...question, {question: textarea.value});\n        });\n        localStorage.setItem('questions', JSON.stringify(questions));\n        dispatch({type: actions.GET_QUESTIONS_SUCCESS, payload: questions});\n    })\n    .catch(err=> { console.log(err); dispatch({type: actions.GET_QUESTIONS_FAIL, payload: err.response.data})});\n    }\n};\n\n\nexport const addAnswer = (answer) => (dispatch, getState) => {\n    dispatch({type: actions.ADD_ANSWER_REQUEST});\n     dispatch({type: actions.ADD_ANSWER_SUCCESS, payload: answer});\n};\n\nexport const addScore = (score) => (dispatch, getState) => {\n    dispatch({type: actions.ADD_SCORE_REQUEST});\n     dispatch({type: actions.ADD_SCORE_SUCCESS, payload: score});\n};\n\nexport const init = () => (dispatch, getState) => {\n    dispatch({type: actions.INIT_REQUEST});\n    localStorage.removeItem('questions');\n     dispatch({type: actions.INIT_SUCCESS});\n};\n\n"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,wBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,cAAlB;AAMA,OAAO,MAAMC,YAAY,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;EACtDD,QAAQ,CAAC;IAACE,IAAI,EAAEN,OAAO,CAACO;EAAf,CAAD,CAAR,CADsD,CAEtD;;EACA,IAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAH,EAAqC;IACjCL,QAAQ,CAAC;MAACE,IAAI,EAAEN,OAAO,CAACU,qBAAf;MAAsCC,OAAO,EAAEC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX;IAA/C,CAAD,CAAR;IACDK,OAAO,CAACC,GAAR,CAAY,QAAZ;EACF,CAHD,MAIK;IACLd,KAAK,CAACe,GAAN,CAAW,GAAEd,GAAI,yCAAjB,EACAe,IADA,CACKC,MAAM,IAAI;MACX;MACA,IAAIC,SAAS,GAAGD,MAAM,CAACE,IAAP,CAAYC,OAAZ,CAAoBC,GAApB,CAAwBC,QAAQ,IAAI;QAChD,MAAMC,cAAc,GAAGD,QAAQ,CAACA,QAAhC;QACA,MAAME,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB;QACAF,QAAQ,CAACG,SAAT,GAAqBJ,cAArB,CAHgD,CAIlD;;QACE,OAAOK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,GAAGP,QAArB,EAA+B;UAACA,QAAQ,EAAEE,QAAQ,CAACM;QAApB,CAA/B,CAAP;MACH,CANe,CAAhB;MAOAvB,YAAY,CAACwB,OAAb,CAAqB,WAArB,EAAkCpB,IAAI,CAACqB,SAAL,CAAed,SAAf,CAAlC;MACAf,QAAQ,CAAC;QAACE,IAAI,EAAEN,OAAO,CAACU,qBAAf;QAAsCC,OAAO,EAAEQ;MAA/C,CAAD,CAAR;IACH,CAZD,EAaCe,KAbD,CAaOC,GAAG,IAAG;MAAErB,OAAO,CAACC,GAAR,CAAYoB,GAAZ;MAAkB/B,QAAQ,CAAC;QAACE,IAAI,EAAEN,OAAO,CAACoC,kBAAf;QAAmCzB,OAAO,EAAEwB,GAAG,CAACE,QAAJ,CAAajB;MAAzD,CAAD,CAAR;IAAyE,CAb1G;EAcC;AACJ,CAvBM;AA0BP,OAAO,MAAMkB,SAAS,GAAIC,MAAD,IAAY,CAACnC,QAAD,EAAWC,QAAX,KAAwB;EACzDD,QAAQ,CAAC;IAACE,IAAI,EAAEN,OAAO,CAACwC;EAAf,CAAD,CAAR;EACCpC,QAAQ,CAAC;IAACE,IAAI,EAAEN,OAAO,CAACyC,kBAAf;IAAmC9B,OAAO,EAAE4B;EAA5C,CAAD,CAAR;AACJ,CAHM;AAKP,OAAO,MAAMG,QAAQ,GAAIC,KAAD,IAAW,CAACvC,QAAD,EAAWC,QAAX,KAAwB;EACvDD,QAAQ,CAAC;IAACE,IAAI,EAAEN,OAAO,CAAC4C;EAAf,CAAD,CAAR;EACCxC,QAAQ,CAAC;IAACE,IAAI,EAAEN,OAAO,CAAC6C,iBAAf;IAAkClC,OAAO,EAAEgC;EAA3C,CAAD,CAAR;AACJ,CAHM;AAKP,OAAO,MAAMG,IAAI,GAAG,MAAM,CAAC1C,QAAD,EAAWC,QAAX,KAAwB;EAC9CD,QAAQ,CAAC;IAACE,IAAI,EAAEN,OAAO,CAAC+C;EAAf,CAAD,CAAR;EACAvC,YAAY,CAACwC,UAAb,CAAwB,WAAxB;EACC5C,QAAQ,CAAC;IAACE,IAAI,EAAEN,OAAO,CAACiD;EAAf,CAAD,CAAR;AACJ,CAJM"},"metadata":{},"sourceType":"module"}