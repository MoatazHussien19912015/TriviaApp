{"ast":null,"code":"var _jsxFileName = \"/media/moataz/data/my-projects/react projects/trivia/src/components/pages/ResultPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { init } from './../../store/actions/questionActions';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResultPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const answers = useSelector(state => state.questionsReducer.answers);\n  const score = useSelector(state => state.questionsReducer.score);\n  const history = useHistory();\n  useEffect(() => {\n    if (!score) {\n      startAgain();\n    }\n  }, [score]);\n\n  const startAgain = () => {\n    dispatch(init());\n    history.push('/quiz');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      paddingTop: '20px',\n      paddingLeft: '100px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n      style: {\n        textAlign: 'center'\n      },\n      children: [\"You scored \", score, \" / 10\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '0 auto'\n        },\n        children: [answers.map(answer => /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: answer.user_success ? 'green' : 'red'\n          },\n          children: [answer.question, \" \", `Corret Answer ${answer.correct_answer} `]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 45\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"Play Again?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ResultPage, \"oKWB8gwoIj/Ou15PpYC8D+YU+Uk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useHistory];\n});\n\n_c = ResultPage;\nexport default ResultPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultPage\");","map":{"version":3,"names":["React","useState","useEffect","Card","Button","useDispatch","useSelector","init","useHistory","ResultPage","dispatch","answers","state","questionsReducer","score","history","startAgain","push","paddingTop","paddingLeft","textAlign","margin","map","answer","color","user_success","question","correct_answer"],"sources":["/media/moataz/data/my-projects/react projects/trivia/src/components/pages/ResultPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { init } from './../../store/actions/questionActions';\nimport { useHistory } from 'react-router-dom';\nconst ResultPage = () => {\n    const dispatch = useDispatch();\n    const answers = useSelector(state => state.questionsReducer.answers);\n    const score = useSelector(state => state.questionsReducer.score);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!score) { startAgain(); }\n    }, [score]);\n    const startAgain = () => {\n        dispatch(init());\n        history.push('/quiz');\n    };\n    return (\n        <Card style={{ paddingTop: '20px', paddingLeft: '100px' }}>\n            <Card.Title style={{ textAlign: 'center' }}>\n                You scored {score} / 10\n            </Card.Title>\n            <Card.Body>\n                <div style={{ margin: '0 auto' }}>\n                    {answers.map(answer => (<p style={{ color: answer.user_success ? 'green' : 'red' }}>{answer.question} {`Corret Answer ${answer.correct_answer} `}</p>))}\n                    {/* <h3 style={{ textAlign: 'center', cursor: 'pointer' }} onClick={startAgain}>Play Again?</h3> */}\n                    <Button variant=\"primary\">Play Again?</Button>{' '}\n                </div>\n            </Card.Body>\n        </Card>\n\n    )\n}\n\nexport default ResultPage;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,uCAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AACA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;EACA,MAAMM,OAAO,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,gBAAN,CAAuBF,OAAjC,CAA3B;EACA,MAAMG,KAAK,GAAGR,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,gBAAN,CAAuBC,KAAjC,CAAzB;EACA,MAAMC,OAAO,GAAGP,UAAU,EAA1B;EAEAN,SAAS,CAAC,MAAM;IACZ,IAAI,CAACY,KAAL,EAAY;MAAEE,UAAU;IAAK;EAChC,CAFQ,EAEN,CAACF,KAAD,CAFM,CAAT;;EAGA,MAAME,UAAU,GAAG,MAAM;IACrBN,QAAQ,CAACH,IAAI,EAAL,CAAR;IACAQ,OAAO,CAACE,IAAR,CAAa,OAAb;EACH,CAHD;;EAIA,oBACI,QAAC,IAAD;IAAM,KAAK,EAAE;MAAEC,UAAU,EAAE,MAAd;MAAsBC,WAAW,EAAE;IAAnC,CAAb;IAAA,wBACI,QAAC,IAAD,CAAM,KAAN;MAAY,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAb,CAAnB;MAAA,0BACgBN,KADhB;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAII,QAAC,IAAD,CAAM,IAAN;MAAA,uBACI;QAAK,KAAK,EAAE;UAAEO,MAAM,EAAE;QAAV,CAAZ;QAAA,WACKV,OAAO,CAACW,GAAR,CAAYC,MAAM,iBAAK;UAAG,KAAK,EAAE;YAAEC,KAAK,EAAED,MAAM,CAACE,YAAP,GAAsB,OAAtB,GAAgC;UAAzC,CAAV;UAAA,WAA6DF,MAAM,CAACG,QAApE,OAAgF,iBAAgBH,MAAM,CAACI,cAAe,GAAtH;QAAA;UAAA;UAAA;UAAA;QAAA,QAAvB,CADL,eAGI,QAAC,MAAD;UAAQ,OAAO,EAAC,SAAhB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ,EAGmD,GAHnD;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH,CA5BD;;GAAMlB,U;UACeJ,W,EACDC,W,EACFA,W,EACEE,U;;;KAJdC,U;AA8BN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}