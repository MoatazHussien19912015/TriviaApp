{"ast":null,"code":"var _jsxFileName = \"/media/moataz/data/my-projects/react projects/trivia/src/components/pages/QuizPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getQuestions, addAnswer, addScore } from './../../store/actions/questionActions';\nimport Spinner from 'react-bootstrap/Spinner';\nimport ResultPage from './ResultPage';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuizPage = () => {\n  _s();\n\n  var _question$question;\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const questions = useSelector(state => state.questionsReducer.questions);\n  const [question, setQuestion] = useState({});\n  const [choice, setChoice] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [score_, setScore_] = useState(0);\n  const [index, setIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  useEffect(() => {\n    dispatch(getQuestions());\n  }, []);\n  useEffect(() => {\n    if (questions) {\n      setQuestion(questions[0]);\n      setIndex(1);\n    }\n  }, [questions]);\n\n  const check_answer = user_answer => {\n    console.log(user_answer.toLowerCase() == question.correct_answer.toLowerCase());\n\n    if (user_answer.toLowerCase() == question.correct_answer.toLowerCase()) {\n      setScore_(val => ++val);\n      dispatch(addAnswer({\n        question: question.question,\n        correct_answer: question.correct_answer.toLowerCase(),\n        user_success: true\n      }));\n    } else {\n      dispatch(addAnswer({\n        question: question.question,\n        correct_answer: question.correct_answer.toLowerCase(),\n        user_success: false\n      }));\n    }\n  };\n\n  const nextQuestion = evt => {\n    if (index > 10) {\n      dispatch(addScore(score_));\n      history.push('/result');\n    } else {\n      setLoading(true);\n      let q_index = questions.findIndex(item => item == question);\n      check_answer(evt.target.value);\n      setChoice(evt.target.value);\n      setTimeout(() => {\n        setChoice(null);\n        setQuestion(questions[++q_index]);\n        setIndex(x => ++x);\n        setLoading(false);\n      }, 500);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      textAlign: 'center',\n      paddingTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n      children: question.category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '3px solid red',\n          width: '60vw',\n          height: '50vh',\n          margin: '0 auto'\n        },\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '50vh'\n          },\n          children: /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 121\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question === null || question === void 0 ? void 0 : (_question$question = question.question) === null || _question$question === void 0 ? void 0 : _question$question.replace(/&quot;/g, '\"')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 158\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          name: \"group1\",\n          type: 'radio',\n          id: `true`,\n          label: `True`,\n          onClick: nextQuestion,\n          value: 'true',\n          checked: choice == 'true'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          name: \"group1\",\n          type: 'radio',\n          id: `false`,\n          label: `False`,\n          onClick: nextQuestion,\n          value: 'false',\n          checked: choice == 'false'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, `true`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n};\n\n_s(QuizPage, \"wEfopQYzHKdXTh8z0tFVCqsoD60=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = QuizPage;\nexport default QuizPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","Card","Form","useDispatch","useSelector","getQuestions","addAnswer","addScore","Spinner","ResultPage","useHistory","QuizPage","history","dispatch","questions","state","questionsReducer","question","setQuestion","choice","setChoice","loading","setLoading","score_","setScore_","index","setIndex","userAnswers","setUserAnswers","check_answer","user_answer","console","log","toLowerCase","correct_answer","val","user_success","nextQuestion","evt","push","q_index","findIndex","item","target","value","setTimeout","x","textAlign","paddingTop","category","border","width","height","margin","display","justifyContent","alignItems","replace"],"sources":["/media/moataz/data/my-projects/react projects/trivia/src/components/pages/QuizPage.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Card, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {getQuestions, addAnswer, addScore} from './../../store/actions/questionActions';\nimport Spinner from 'react-bootstrap/Spinner';\nimport ResultPage from './ResultPage';\nimport { useHistory } from 'react-router-dom';\nconst QuizPage = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const questions = useSelector(state => state.questionsReducer.questions);\n    const [question, setQuestion] = useState({});\n    const [choice, setChoice] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [score_, setScore_] = useState(0);\n    const [index, setIndex] = useState(0);\n    const [userAnswers, setUserAnswers] = useState([]);\n    useEffect(() => {\n       dispatch(getQuestions()); \n    }, []);\n\n    useEffect(() => { \n        if(questions){\n            setQuestion(questions[0]);\n            setIndex(1);\n        }\n    }, [questions]);\n\n    const check_answer = (user_answer) => { console.log(user_answer.toLowerCase() == question.correct_answer.toLowerCase());\n        if(user_answer.toLowerCase() == question.correct_answer.toLowerCase()) {\n            setScore_(val=>++val);\n            dispatch(addAnswer({question: question.question, correct_answer: question.correct_answer.toLowerCase(), user_success: true}));\n        } else {\n            dispatch(addAnswer({question: question.question, correct_answer: question.correct_answer.toLowerCase(), user_success: false}));\n        }\n    };\n\n    const nextQuestion = (evt) => {\n        if(index > 10){\n            dispatch(addScore(score_));\n            history.push('/result');\n         } else {\n        setLoading(true);\n        let q_index = questions.findIndex(item=>item==question);\n        check_answer(evt.target.value);\n        setChoice(evt.target.value);\n        setTimeout(() => {\n            setChoice(null);\n        setQuestion(questions[++q_index]);\n        setIndex(x=>++x);\n        setLoading(false);\n        }, 500);\n    }\n    };\n    return (\n      <Card style={{textAlign: 'center', paddingTop: '20px'}}>\n            <Card.Title>\n               {question.category}\n            </Card.Title>\n            <Card.Body>\n            <div style={{border: '3px solid red',width: '60vw', height: '50vh', margin: '0 auto'}}>\n                {loading?<div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height: '50vh'}}><Spinner animation=\"border\" /></div>:<h3>{question?.question?.replace(/&quot;/g, '\"')}</h3> }\n                </div>\n                <div key={`true`} className=\"mt-3\">\n          <Form.Check inline\n          name=\"group1\"\n            type={'radio'}\n            id={`true`}\n            label={`True`}\n            onClick={nextQuestion}\n            value={'true'}\n            checked={choice=='true'}\n          />\n           \n          <Form.Check  inline\n          name=\"group1\"\n            type={'radio'}\n            id={`false`}\n            label={`False`}\n            onClick={nextQuestion}\n            value={'false'}\n            checked={choice=='false'}\n          />\n            </div>\n            </Card.Body>\n            \n        </Card>\n    );\n};\n\nexport default QuizPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}