{"ast":null,"code":"var _jsxFileName = \"/media/moataz/data/my-projects/react projects/trivia/src/components/pages/QuizPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getQuestions, addAnswer, addScore } from './../../store/actions/questionActions';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuizPage = () => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const questions = useSelector(state => state.questionsReducer.questions);\n  const [question, setQuestion] = useState({});\n  const [choice, setChoice] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [score_, setScore_] = useState(0);\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    dispatch(getQuestions());\n  }, []);\n  useEffect(() => {\n    if (questions) {\n      setQuestion(questions[0]);\n      setIndex(1);\n    }\n  }, [questions]);\n\n  const check_answer = user_answer => {\n    console.log(user_answer.toLowerCase() == question.correct_answer.toLowerCase());\n\n    if (user_answer.toLowerCase() == question.correct_answer.toLowerCase()) {\n      setScore_(val => ++val);\n      dispatch(addAnswer({\n        question: question.question,\n        correct_answer: question.correct_answer.toLowerCase(),\n        user_success: true\n      }));\n    } else {\n      dispatch(addAnswer({\n        question: question.question,\n        correct_answer: question.correct_answer.toLowerCase(),\n        user_success: false\n      }));\n    }\n  };\n\n  const nextQuestion = evt => {\n    setLoading(true);\n    let q_index = questions.findIndex(item => item == question);\n    check_answer(evt.target.value);\n    setChoice(evt.target.value);\n    setTimeout(() => {\n      setChoice(null);\n      setQuestion(questions[++q_index]);\n      setIndex(x => ++x);\n      setLoading(false);\n\n      if (index == 10) {\n        dispatch(addScore(score_));\n        history.push('/result');\n      }\n    }, 500);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      textAlign: 'center',\n      paddingTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n      children: question === null || question === void 0 ? void 0 : question.category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '3px solid red',\n          width: '60vw',\n          height: '50vh',\n          margin: '0 auto'\n        },\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '50vh'\n          },\n          children: /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 129\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question === null || question === void 0 ? void 0 : question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 168\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          name: \"group1\",\n          type: 'radio',\n          id: `true`,\n          label: `True`,\n          onClick: nextQuestion,\n          value: 'true',\n          checked: choice == 'true',\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          inline: true,\n          name: \"group1\",\n          type: 'radio',\n          id: `false`,\n          label: `False`,\n          onClick: nextQuestion,\n          value: 'false',\n          checked: choice == 'false',\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, `true`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuizPage, \"9MVNuV//jH4fRTDdMQJSCVks7E4=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = QuizPage;\nexport default QuizPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","Card","Form","useDispatch","useSelector","getQuestions","addAnswer","addScore","Spinner","useHistory","QuizPage","history","dispatch","questions","state","questionsReducer","question","setQuestion","choice","setChoice","loading","setLoading","score_","setScore_","index","setIndex","check_answer","user_answer","console","log","toLowerCase","correct_answer","val","user_success","nextQuestion","evt","q_index","findIndex","item","target","value","setTimeout","x","push","textAlign","paddingTop","category","border","width","height","margin","display","justifyContent","alignItems"],"sources":["/media/moataz/data/my-projects/react projects/trivia/src/components/pages/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Form } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getQuestions, addAnswer, addScore } from './../../store/actions/questionActions';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { useHistory } from 'react-router-dom';\nconst QuizPage = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const questions = useSelector(state => state.questionsReducer.questions);\n    const [question, setQuestion] = useState({});\n    const [choice, setChoice] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [score_, setScore_] = useState(0);\n    const [index, setIndex] = useState(0);\n\n    useEffect(() => {\n        dispatch(getQuestions());\n    }, []);\n\n    useEffect(() => {\n        if (questions) {\n            setQuestion(questions[0]);\n            setIndex(1);\n        }\n    }, [questions]);\n\n    const check_answer = (user_answer) => {\n        console.log(user_answer.toLowerCase() == question.correct_answer.toLowerCase());\n        if (user_answer.toLowerCase() == question.correct_answer.toLowerCase()) {\n            setScore_(val => ++val);\n            dispatch(addAnswer({ question: question.question, correct_answer: question.correct_answer.toLowerCase(), user_success: true }));\n        } else {\n            dispatch(addAnswer({ question: question.question, correct_answer: question.correct_answer.toLowerCase(), user_success: false }));\n        }\n    };\n\n    const nextQuestion = (evt) => {\n\n        setLoading(true);\n        let q_index = questions.findIndex(item => item == question);\n        check_answer(evt.target.value);\n        setChoice(evt.target.value);\n        setTimeout(() => {\n            setChoice(null);\n            setQuestion(questions[++q_index]);\n            setIndex(x => ++x);\n            setLoading(false);\n\n            if (index == 10) {\n                dispatch(addScore(score_));\n                history.push('/result');\n            }\n        }, 500);\n\n    };\n    return (\n        <Card style={{ textAlign: 'center', paddingTop: '20px' }}>\n            <Card.Title>\n                {question?.category}\n            </Card.Title>\n            <Card.Body>\n                <div style={{ border: '3px solid red', width: '60vw', height: '50vh', margin: '0 auto' }}>\n                    {loading ? <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '50vh' }}><Spinner animation=\"border\" /></div> : <h3>{question?.question}</h3>}\n                </div>\n                <div key={`true`} className=\"mt-3\">\n                    <Form.Check inline\n                        name=\"group1\"\n                        type={'radio'}\n                        id={`true`}\n                        label={`True`}\n                        onClick={nextQuestion}\n                        value={'true'}\n                        checked={choice == 'true'}\n                        disabled={loading}\n                    />\n\n                    <Form.Check inline\n                        name=\"group1\"\n                        type={'radio'}\n                        id={`false`}\n                        label={`False`}\n                        onClick={nextQuestion}\n                        value={'false'}\n                        checked={choice == 'false'}\n                        disabled={loading}\n                    />\n                </div>\n            </Card.Body>\n\n        </Card>\n    );\n};\n\nexport default QuizPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}