{"ast":null,"code":"import * as actions from '../types/questionTypes';\nimport axios from 'axios';\nimport { url } from '../../config';\nexport const getQuestions = () => (dispatch, getState) => {\n  dispatch({\n    type: actions.GET_QUESTIONS_REQUEST\n  }); // checking if the questions existed in the localstorage\n\n  if (localStorage.getItem('questions')) {\n    dispatch({\n      type: actions.GET_QUESTIONS_SUCCESS,\n      payload: JSON.parse(localStorage.getItem('questions'))\n    });\n    console.log('heeeey');\n  } else {\n    axios.get(`${url}?amount=10&difficulty=hard&type=boolean`).then(result => {\n      // removing hmtl unicoded characters\n      let questions = result.data.results.map(question => {\n        const encodedResults = question.question;\n        const textarea = document.createElement('textarea');\n        textarea.innerHTML = encodedResults;\n        return Object.assign({}, { ...question\n        }, {\n          question: textarea.value\n        });\n      });\n      localStorage.setItem('questions', JSON.stringify(questions));\n      dispatch({\n        type: actions.GET_QUESTIONS_SUCCESS,\n        payload: questions\n      });\n    }).catch(err => {\n      console.log(err);\n      dispatch({\n        type: actions.GET_QUESTIONS_FAIL,\n        payload: err.response.data\n      });\n    });\n  }\n};\nexport const addAnswer = answer => (dispatch, getState) => {\n  dispatch({\n    type: actions.ADD_ANSWER_REQUEST\n  });\n  dispatch({\n    type: actions.ADD_ANSWER_SUCCESS,\n    payload: answer\n  });\n};\nexport const addScore = score => (dispatch, getState) => {\n  dispatch({\n    type: actions.ADD_SCORE_REQUEST\n  });\n  dispatch({\n    type: actions.ADD_SCORE_SUCCESS,\n    payload: score\n  });\n};\nexport const init = () => (dispatch, getState) => {\n  dispatch({\n    type: actions.INIT_REQUEST\n  });\n  localStorage.removeItem('questions');\n  dispatch({\n    type: actions.INIT_SUCCESS\n  });\n};","map":{"version":3,"names":["actions","axios","url","getQuestions","dispatch","getState","type","GET_QUESTIONS_REQUEST","localStorage","getItem","GET_QUESTIONS_SUCCESS","payload","JSON","parse","console","log","get","then","result","questions","data","results","map","question","encodedResults","textarea","document","createElement","innerHTML","Object","assign","value","setItem","stringify","catch","err","GET_QUESTIONS_FAIL","response","addAnswer","answer","ADD_ANSWER_REQUEST","ADD_ANSWER_SUCCESS","addScore","score","ADD_SCORE_REQUEST","ADD_SCORE_SUCCESS","init","INIT_REQUEST","removeItem","INIT_SUCCESS"],"sources":["/media/moataz/data/my-projects/react projects/trivia/src/store/actions/questionActions.js"],"sourcesContent":["import * as actions from '../types/questionTypes';\nimport axios from 'axios';\nimport { url } from '../../config';\n\n\n\n\n\nexport const getQuestions = () => (dispatch, getState) => {\n    dispatch({ type: actions.GET_QUESTIONS_REQUEST });\n    // checking if the questions existed in the localstorage\n    if (localStorage.getItem('questions')) {\n        dispatch({ type: actions.GET_QUESTIONS_SUCCESS, payload: JSON.parse(localStorage.getItem('questions')) });\n        console.log('heeeey');\n    }\n    else {\n        axios.get(`${url}?amount=10&difficulty=hard&type=boolean`).\n            then(result => {\n                // removing hmtl unicoded characters\n                let questions = result.data.results.map(question => {\n                    const encodedResults = question.question;\n                    const textarea = document.createElement('textarea');\n                    textarea.innerHTML = encodedResults;\n                    return Object.assign({}, { ...question }, { question: textarea.value });\n                });\n                localStorage.setItem('questions', JSON.stringify(questions));\n                dispatch({ type: actions.GET_QUESTIONS_SUCCESS, payload: questions });\n            })\n            .catch(err => { console.log(err); dispatch({ type: actions.GET_QUESTIONS_FAIL, payload: err.response.data }) });\n    }\n};\n\n\nexport const addAnswer = (answer) => (dispatch, getState) => {\n    dispatch({ type: actions.ADD_ANSWER_REQUEST });\n    dispatch({ type: actions.ADD_ANSWER_SUCCESS, payload: answer });\n};\n\nexport const addScore = (score) => (dispatch, getState) => {\n    dispatch({ type: actions.ADD_SCORE_REQUEST });\n    dispatch({ type: actions.ADD_SCORE_SUCCESS, payload: score });\n};\n\nexport const init = () => (dispatch, getState) => {\n    dispatch({ type: actions.INIT_REQUEST });\n    localStorage.removeItem('questions');\n    dispatch({ type: actions.INIT_SUCCESS });\n};\n\n"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,wBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AAMA,OAAO,MAAMC,YAAY,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;EACtDD,QAAQ,CAAC;IAAEE,IAAI,EAAEN,OAAO,CAACO;EAAhB,CAAD,CAAR,CADsD,CAEtD;;EACA,IAAIC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAJ,EAAuC;IACnCL,QAAQ,CAAC;MAAEE,IAAI,EAAEN,OAAO,CAACU,qBAAhB;MAAuCC,OAAO,EAAEC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX;IAAhD,CAAD,CAAR;IACAK,OAAO,CAACC,GAAR,CAAY,QAAZ;EACH,CAHD,MAIK;IACDd,KAAK,CAACe,GAAN,CAAW,GAAEd,GAAI,yCAAjB,EACIe,IADJ,CACSC,MAAM,IAAI;MACX;MACA,IAAIC,SAAS,GAAGD,MAAM,CAACE,IAAP,CAAYC,OAAZ,CAAoBC,GAApB,CAAwBC,QAAQ,IAAI;QAChD,MAAMC,cAAc,GAAGD,QAAQ,CAACA,QAAhC;QACA,MAAME,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAjB;QACAF,QAAQ,CAACG,SAAT,GAAqBJ,cAArB;QACA,OAAOK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,EAAE,GAAGP;QAAL,CAAlB,EAAmC;UAAEA,QAAQ,EAAEE,QAAQ,CAACM;QAArB,CAAnC,CAAP;MACH,CALe,CAAhB;MAMAvB,YAAY,CAACwB,OAAb,CAAqB,WAArB,EAAkCpB,IAAI,CAACqB,SAAL,CAAed,SAAf,CAAlC;MACAf,QAAQ,CAAC;QAAEE,IAAI,EAAEN,OAAO,CAACU,qBAAhB;QAAuCC,OAAO,EAAEQ;MAAhD,CAAD,CAAR;IACH,CAXL,EAYKe,KAZL,CAYWC,GAAG,IAAI;MAAErB,OAAO,CAACC,GAAR,CAAYoB,GAAZ;MAAkB/B,QAAQ,CAAC;QAAEE,IAAI,EAAEN,OAAO,CAACoC,kBAAhB;QAAoCzB,OAAO,EAAEwB,GAAG,CAACE,QAAJ,CAAajB;MAA1D,CAAD,CAAR;IAA4E,CAZlH;EAaH;AACJ,CAtBM;AAyBP,OAAO,MAAMkB,SAAS,GAAIC,MAAD,IAAY,CAACnC,QAAD,EAAWC,QAAX,KAAwB;EACzDD,QAAQ,CAAC;IAAEE,IAAI,EAAEN,OAAO,CAACwC;EAAhB,CAAD,CAAR;EACApC,QAAQ,CAAC;IAAEE,IAAI,EAAEN,OAAO,CAACyC,kBAAhB;IAAoC9B,OAAO,EAAE4B;EAA7C,CAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMG,QAAQ,GAAIC,KAAD,IAAW,CAACvC,QAAD,EAAWC,QAAX,KAAwB;EACvDD,QAAQ,CAAC;IAAEE,IAAI,EAAEN,OAAO,CAAC4C;EAAhB,CAAD,CAAR;EACAxC,QAAQ,CAAC;IAAEE,IAAI,EAAEN,OAAO,CAAC6C,iBAAhB;IAAmClC,OAAO,EAAEgC;EAA5C,CAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMG,IAAI,GAAG,MAAM,CAAC1C,QAAD,EAAWC,QAAX,KAAwB;EAC9CD,QAAQ,CAAC;IAAEE,IAAI,EAAEN,OAAO,CAAC+C;EAAhB,CAAD,CAAR;EACAvC,YAAY,CAACwC,UAAb,CAAwB,WAAxB;EACA5C,QAAQ,CAAC;IAAEE,IAAI,EAAEN,OAAO,CAACiD;EAAhB,CAAD,CAAR;AACH,CAJM"},"metadata":{},"sourceType":"module"}